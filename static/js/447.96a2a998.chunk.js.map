{"version":3,"file":"static/js/447.96a2a998.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","servicec/API.service.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, path }) => {\n  const location = useLocation();\n  const addPath = path ? `${path}/` : '';\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${addPath}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchBar_form__A7-sl\",\"btn\":\"searchBar_btn__wCuwC\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport css from './searchBar.module.css';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = evt => {\n    setSearch(evt?.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (search.trim() === '') {\n      toast.info('Enter movie`s name');\n    }\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          value={search}\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\" disabled={!search} className={css.btn}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport { fetchApiSearchMovies } from 'servicec/API.service';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    fetchApiSearchMovies(searchQuery)\n      .then(({ results }) => {\n        const searchMovies =\n          [...results.map(({ id, title }) => ({ id, title }))] ?? [];\n        if (!searchMovies.length) {\n          toast.info('Movie is not found');\n        }\n        setMovies(searchMovies);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [searchQuery]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      {movies && <MoviesList movies={movies} path={''} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = 'f4238f5bd8cc05dfda59a3450fa27d5e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchApiMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiSearchMovies = async (search = '') => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${search}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\nexport const fetchApiReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n"],"names":["movies","path","location","useLocation","addPath","map","id","title","to","state","from","onSubmit","useState","search","setSearch","evt","preventDefault","trim","toast","className","css","type","value","name","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","disabled","useSearchParams","searchParams","setSearchParams","setMovies","searchQuery","get","useEffect","fetchApiSearchMovies","then","results","searchMovies","length","catch","error","console","log","query","MoviesList","KEY","BASE_URL","fetchApiMovies","axios","response","data","message","fetchApiMovieDetails","movieId","fetchApiCast","fetchApiReviews"],"sourceRoot":""}