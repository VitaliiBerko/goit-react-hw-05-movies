{"version":3,"file":"static/js/961.d045f3bb.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","servicec/API.service.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/movieDetails.module.css?c148"],"sourcesContent":["import { useState, useEffect, Fragment } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { fetchApiMovieDetails } from 'servicec/API.service';\nimport css from './movieDetails.module.css';\nimport clsx from 'clsx';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleClickBack = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    setIsLoading(true);\n\n    fetchApiMovieDetails(movieId)\n      .then(data => setDetails(data))\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  const { title, poster_path, overview, popularity } = details;\n  const releaseDate = new Date(details.release_date).getFullYear();\n\n  return (\n    <Fragment>\n      {isLoading && <h2>Loading... </h2>}\n\n      {details && (\n        <>\n          <button type=\"button\" onClick={handleClickBack} className={css.btn}>\n            Go back\n          </button>\n\n          <div className= {clsx(css.movieDetails, css.container)}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n            <div className={css.description}>\n              <h2>{title}</h2>\n              <h3>{releaseDate}</h3>\n              <h3>Use Score: {popularity}</h3>\n              <div>\n                <h2>Overwie</h2>\n                <p>{overview}</p>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      <div className={css.addInfor}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={location.state}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={location.state}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = 'f4238f5bd8cc05dfda59a3450fa27d5e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchApiMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiSearchMovies = async (search = '') => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${search}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\nexport const fetchApiReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"movieDetails_movieDetails__bJShy\",\"description\":\"movieDetails_description__tzHTk\",\"btn\":\"movieDetails_btn__d4YP4\",\"addInfor\":\"movieDetails_addInfor__6KpHZ\",\"container\":\"movieDetails_container__0I5or\",\"cardSet\":\"movieDetails_cardSet__ZR6c5\",\"item\":\"movieDetails_item__NCgEc\"};"],"names":["useState","details","setDetails","isLoading","setIsLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchApiMovieDetails","then","data","catch","error","console","log","finally","title","poster_path","overview","popularity","releaseDate","Date","release_date","getFullYear","Fragment","type","onClick","state","from","className","css","clsx","src","alt","to","KEY","BASE_URL","fetchApiMovies","axios","response","toast","message","fetchApiSearchMovies","search","fetchApiCast","fetchApiReviews"],"sourceRoot":""}