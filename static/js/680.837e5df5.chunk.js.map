{"version":3,"file":"static/js/680.837e5df5.chunk.js","mappings":"wKAgCA,IA7BmB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACtBC,GAAWC,EAAAA,EAAAA,MACXC,EAAUH,EAAI,UAAMA,EAAN,KAAgB,GAEpC,OACE,+BACE,wBACGD,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAL,OAAeE,GAAMG,MAAO,CAAEC,KAAMR,GAA5C,SACGK,KAFID,EADC,OAUnB,C,4FCOD,UAtBiB,WACf,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,GAAU,OAAIM,EAAQb,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,KAC3B,IACAY,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,KAGD,gCACGD,IAAa,wCACd,4CACA,SAAC,IAAD,CAAYZ,KAAM,UAAWD,OAAQA,MAG1C,C,6MCpBKoB,G,QAAM,oCACNC,EAAW,+BAEJL,EAAc,mCAAG,6GAEHM,EAAAA,EAAAA,IAAA,UAClBD,EADkB,uCACqBD,IAHlB,cAEpBG,EAFoB,yBAKnBA,EAASC,MALU,gCAO1BC,EAAAA,GAAAA,MAAY,KAAMC,SAPQ,yDAAH,qDAWdC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAgB,GAAhB,kBAETN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iCACeD,EADf,kBAC4BQ,IAHnB,cAE1BL,EAF0B,yBAKzBA,EAASC,MALgB,gCAOhCC,EAAAA,GAAAA,MAAY,KAAMC,SAPc,yDAAH,qDAWpBG,EAAoB,mCAAG,WAAMC,GAAN,gGAETR,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAS,EADA,oBACmBV,IAHV,cAE1BG,EAF0B,yBAKzBA,EAASC,MALgB,gCAOhCC,EAAAA,GAAAA,MAAY,KAAMC,SAPc,yDAAH,sDAWpBK,EAAY,mCAAG,WAAMD,GAAN,gGAEDR,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAS,EADA,4BAC2BV,IAH1B,cAElBG,EAFkB,yBAKjBA,EAASC,MALQ,gCAOxBC,EAAAA,GAAAA,MAAY,KAAMC,SAPM,yDAAH,sDAUZM,EAAe,mCAAG,WAAMF,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAS,EADA,4BAC2BV,IAHvB,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BC,EAAAA,GAAAA,MAAY,KAAMC,SAPS,yDAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","servicec/API.service.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, path }) => {\n  const location = useLocation();\n  const addPath = path ? `${path}/` : '';\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${addPath}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { fetchApiMovies } from 'servicec/API.service';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchApiMovies()\n      .then(({ results }) => {\n        setMovies([...results.map(({ id, title }) => ({ id, title }))]);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h2>Loading...</h2>}\n      <h2>Trending today</h2>\n      <MoviesList path={'movies/'} movies={movies} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = 'f4238f5bd8cc05dfda59a3450fa27d5e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchApiMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiSearchMovies = async (search = '') => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${search}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchApiCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\nexport const fetchApiReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n"],"names":["movies","path","location","useLocation","addPath","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","fetchApiMovies","then","results","finally","KEY","BASE_URL","axios","response","data","toast","message","fetchApiSearchMovies","search","fetchApiMovieDetails","movieId","fetchApiCast","fetchApiReviews"],"sourceRoot":""}